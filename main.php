<?php
function json_to_str($json_file) {
	return json_encode($json_file, JSON_UNESCAPED_UNICODE);
}
function str_to_json($string) {
	return json_decode($string, true);
}
function formatHtml($string) {
	$string = str_replace('&', '&amp;', $string);
	$string = str_replace('<', '&lt;', $string);
	$string = str_replace('>', '&gt;', $string);
	return $string;
}
function searchForLine($filename, $line) {
	$file = fopen($filename, 'r');
	if ($file) {
		while (($buffer = fgets($file, 100)) !== false) {
			if (trim($buffer) == $line) {
				fclose($file);
				return true;
			}
		}
		fclose($file);
	}
	return false;
}

function is_there_a_word($string, $array) {
	$string = mb_strtolower($string, 'UTF-8');
	foreach($array as $word) {
		if (strpos($string, $word) !== false) {
			return true;
		}
	}
	return false;
}
// returns all text after first word
function get_request_text($message_text) {
	return explode(' ', $message_text, 2)[1];
}

include_once('log.class.php');
include_once('tg.class.php');
include_once('mysql.class.php');
include_once('student_functions.php');
include_once('teacher_functions.php');

$log = new LOG();
$tg = new TG('', $log);
$conn = mysqli_connect('', '', '', '');
if (!$conn) { $tg->sendMe('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: '.mysqli_connect_error()); }
$mysql = new MYSQL($conn);
$ADMIN_CHAT_IDS = array();


$event_body = file_get_contents('php://input');
$event_arr = str_to_json($event_body);
$event_type = ($event_arr == null ? null : array_keys($event_arr)[1]);
$event_content = $event_arr[$event_type];
$log->addLogText('New event "'.$event_type.'"  =>  \n'.json_to_str($event_arr));


if ($event_type == 'callback_query' && $event_content['data'] != '') {
	$callback_data = $event_content['data'];
	$callback_id = $event_content['id'];
	$chat_id = $event_content['message']['chat']['id'];
	$message_id = $event_content['message']['message_id'];
	$message_text = $event_content['message']['text'];

	$user = $mysql->getUser($chat_id);
	$id = $user['id'];

	if (in_array($chat_id, $ADMIN_CHAT_IDS, true)) {
		////////////////////////////// ADMIN PANEL //////////////////////////////
		$tg->sendMe($callback_data);

		/////////////////////////////////////////////////////////////////////////
	} else {
		$callback_array = explode(' ', $callback_data);
		$callback_command = $callback_array[0];
		$params = explode('_', $callback_array[1]);
		// $tg->editInlineKeyboard($chat_id, $message_id);
		switch ($callback_command) {
			case 'set_mark':
				// $tg->sendMessage($chat_id, $callback_data);
				// $tg->sendMessage($chat_id, 'ok '.$params[2], $message_id);
				$mark_user_id = $params[0];
				$mark_work_id = $params[1];
				$mark = $params[2];


				foreach (explode('_', $callback_array[2]) as $_deleting_message_id) {
					$tg->deleteMessage($chat_id, $_deleting_message_id);
				}

				if ($mark == 0) {
					$tg->editMessageText($chat_id, '<b>'.explode('\n\n', $message_text)[0].'</b>–†–µ—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ', $message_id);
					$tg->callbackAnswer($callback_id, '–†–µ—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ');
				} else {
					$tg->editMessageText($chat_id, '<b>'.explode('\n\n', $message_text)[0].'</b>–ü–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ - $mark', $message_id);
					$tg->callbackAnswer($callback_id, '–û—Ü–µ–Ω–∫–∞ $mark –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞');
				}

				$new_mark_id = $mysql->changeMark($mark_user_id, $mark_work_id, $mark);
				$mysql->setStatus($id, 'teacher_mark_description_setting', $new_mark_id);
				$tg->sendMessage($chat_id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ—Ü–µ–Ω–∫–µ', '', $tg->makeKeyboard(array($tg->button('–ü–æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'))));

				break;
			default:
				$tg->sendMessage($chat_id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞', $message_id);
				break;
		}


	//$tg->callbackAnswer($callback_id, 'hello');

	}

} else if ($event_type == 'message' && ($event_content['text'] != '' || $event_content['caption'] != '' || $event_content['document']['file_id'] != '')) {
	$message_text = ($event_content['text'] != '' ? $event_content['text'] : $event_content['caption']);
	$message_file = ($event_content['document']['file_id'] != '' ? $event_content['document']['file_id'] : '');
	$message_id = $event_content['message_id'];
	$chat_id = $event_content['chat']['id'];
	$chat_type = $event_content['chat']['type'];
	$user_first_name = $event_content['from']['first_name'];
	$telegram_id = $event_content['from']['id'];
	$telegram_username = $event_content['from']['username'];
	if (in_array($chat_id, $ADMIN_CHAT_IDS, true)) {
		////////////////////////////// ADMIN PANEL //////////////////////////////

		$tg->sendMessage($chat_id, '–ü—Ä–∏–≤–µ—Ç!', $message_id);
		///////////////////////////////////////////////////////








		///////////////////////////////////////////////////////
	} else if ($chat_type == 'private') {
		$user = $mysql->getUser($telegram_id);
		if (!$user) {
			///// –ù–ï–ò–ó–í–ï–°–¢–ù–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ /////
			if ($message_text == '/start') {
				$tg->sendMessage($chat_id, '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤ 57 —à–∫–æ–ª—ã. \n–ü—Ä–∏—à–ª–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ {–ö–ª–∞—Å—Å} {–ò–º—è} {–§–∞–º–∏–ª–∏—è}, –Ω–∞–ø—Ä–∏–º–µ—Ä –≤–æ—Ç —Ç–∞–∫: 10–Ø –ü–∞–≤–µ–ª –Ø–∫—É–±–æ–≤');
			} else {
				// –ò—â–µ–º –≤ —Ñ–∞–π–ª–µ —Å —É—á–µ–Ω–∏–∫–∞–º–∏
				if (searchForLine('students.txt', $message_text)) {
					$userdata_array = explode(' ', $message_text, 2);
					$user_class_name_ru = $userdata_array[0];
					$user_full_name = $userdata_array[1];
					$is_registered = $mysql->getUserByFullName($user_full_name);
					if ($is_registered && $is_registered['class_id'] == $mysql->getClassId($user_class_name_ru)) {
						// –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
						$tg->sendMessage($chat_id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é! \n–ö–æ–¥ –æ—à–∏–±–∫–∏ DR', '', $tg->makeKeyboard());
					} else {
						// –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
						$mysql->addUser($telegram_id, $telegram_username, $user_full_name, $user_class_name_ru);
						$tg->sendMessage($chat_id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, $user_full_name, –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ! –û—Ä–∏–µ–Ω—Ç–∏—Ä—É–π—Ç–µ—Å—å –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ. –°–≤—è–∑—å —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –≤ —Ä–∞–∑–¥–µ–ª–µ –ò–Ω—Ñ–æ');
						$id = $mysql->getUser($telegram_id)['id'];
						sendMain($mysql, $id, $tg, $chat_id);
					}

				} else {
					// –£—á–µ–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ —É—á–µ–Ω–∏–∫–æ–≤
					$tg->sendMessage($chat_id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é! \n–ö–æ–¥ –æ—à–∏–±–∫–∏ NF', '', $tg->makeKeyboard());
				}
			}
		} else {
			///// –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–ù–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ /////
			$id = $user['id'];
			$full_name = $user['full_name'];
			$role = $user['role'];
			$class_id = $user['class_id'];
			$status = $user['status'];
			$status_info = $user['status_info'];

			if ($role == 'teacher') {
				////////////////////////
				///// –ú–ï–ù–Æ –£–ß–ò–¢–ï–õ–Ø /////
				switch ($status) {
					default:
					case 'teacher_main':
						switch($message_text) {
							case '–†–∞–±–æ—Ç—ã':
								sendUncheckedWorks($mysql, $tg, $chat_id);
								sendTeacherMain($mysql, $id, $tg, $chat_id);
								break;
							case '–ü–æ—Å—ã–ª–∫–∏':
								sendUncheckedDeliveries($mysql, $tg, $chat_id);
								sendTeacherMain($mysql, $id, $tg, $chat_id);
								break;
							case '–û—Ü–µ–Ω–∫–∏':
								sendMarksQuestion_class($mysql, $id, $tg, $chat_id);
								break;
							case '–ù–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞':
								sendNewWorkQuestion_class($mysql, $id, $tg, $chat_id);
								break;
							default:
								$tg->sendMessage($chat_id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞', '', mainTeacherKeyboard($tg));

						}
						break;

					case 'teacher_marks_class_setting':
						if ($message_text != '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
							sendMarks($mysql, $id, $tg, $chat_id, $message_text);
						} else {
							sendTeacherMain($mysql, $id, $tg, $chat_id);
						}
						break;

					case 'teacher_new_work_class':
						if ($message_text != '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
							sendNewWorkQuestion_name($mysql, $id, $tg, $chat_id, $message_text);
						} else {
							sendTeacherMain($mysql, $id, $tg, $chat_id);
						}
						break;

					case 'teacher_new_work_name':
						if ($message_text != '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
							sendNewWorkQuestion_description($mysql, $id, $tg, $chat_id, $status_info, $message_text);
						} else {
							sendTeacherMain($mysql, $id, $tg, $chat_id);
						}
						break;

					case 'teacher_new_work_description':
						if ($message_text != '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
							sendNewWorkQuestion_file($mysql, $id, $tg, $chat_id, $status_info, $message_text);
						} else {
							sendTeacherMain($mysql, $id, $tg, $chat_id);
						}
						break;

					case 'teacher_mark_description_setting':
						if ($message_text != '–ü–æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è') {
							$mark_user_id = $mysql->changeMarkDescriptionById($status_info, $message_text);
							$tg->sendMessage($mysql->getTgId($mark_user_id), 'üîî –í–∞–º –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º');
						} else {
							$mark_user_id = $mysql->getMarkById($status_info)['user_id'];
							$tg->sendMessage($mysql->getTgId($mark_user_id), 'üîî –í–∞–º –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞');
						}
						sendTeacherMain($mysql, $id, $tg, $chat_id);
						break;
				}

			} else if ($role == 'student') {
				switch ($status) {
					default:
					case 'student_main':
						switch($message_text) {
							case '–ú–æ–∏ —Ä–∞–±–æ—Ç—ã':
								sendWorkList($mysql, $id, $class_id, $tg, $chat_id);
								break;
							case '–ò–Ω—Ñ–æ':
								sendInfo($mysql, $id, $tg, $chat_id, $class_id);
								break;
							default:
								sendUnknownAndMain($mysql, $id, $tg, $chat_id, $message_id);
						}
						break;
					case 'student_work_list':
						switch($message_text) {
							case '–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫':
								sendWorkList($mysql, $id, $class_id, $tg, $chat_id);
								break;
							case '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
								sendMain($mysql, $id, $tg, $chat_id);
								break;
							default:
								$work_number = explode('. ', $message_text, 2)[0];
								if (is_numeric($work_number)) {
									$work = $mysql->getWork($class_id, $work_number);
									if (!$work['id']) {
										sendUnknownAndMain($mysql, $id, $tg, $chat_id, $message_id);
									} else {
										sendWork($mysql, $id, $work, $tg, $chat_id);
									}
								} else {
									sendUnknownAndMain($mysql, $id, $tg, $chat_id, $message_id);
								}
						}
						break;
					case 'student_work':
						switch($message_text) {
							case '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ':
								$mark_array = $mysql->getMarkArray($id, $status_info);
								if (!$mark_array || $mark_array['mark'] == 1) {
									$mysql->setStatus($id, 'student_work_uploading', $status_info);
									$tg->sendMessage($chat_id, '–ù—É —Ç–∞–∫ –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ, —á–µ–≥–æ –∂–µ –≤—ã –∂–¥–µ—Ç–µ?', '', $tg->makeKeyboard($tg->button('–û—Ç–º–µ–Ω–∏—Ç—å')));
								} else {
									sendUnknownAndMain($mysql, $id, $tg, $chat_id, $message_id);
								}
								break;
							case '–í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É':
								sendWorkList($mysql, $id, $class_id, $tg, $chat_id);
								break;
							default:
								sendUnknownAndMain($mysql, $id, $tg, $chat_id, $message_id);
						}
						break;
					case 'student_work_uploading':
						switch($message_text) {
							case '–û—Ç–º–µ–Ω–∏—Ç—å':
								sendWork($mysql, $id, $mysql->getWorkById($status_info), $tg, $chat_id);
								break;
							default:
								/////////////////////////////////////////////////////////////////////////////////
								////////////////////////////// SQL INJECTION ////////////////////////////////////
								/////////////////////////////////////////////////////////////////////////////////
								$mysql->setStatus($id, 'student_work_uploaded', $status_info);
								$mysql->addDelivery($id, $status_info, $message_file, $message_text);
								$tg->sendMessage($chat_id, '–ó–∞–ø–∏—Å–∞–Ω–æ! –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ?', $message_id, $tg->makeKeyboard($tg->button('–ó–∞–∫–æ–Ω—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É')));
								$mark_array = $mysql->getMarkArray($id, $status_info);
								if (!$mark_array) {
									$mysql->addMark($id, $status_info, 1);
								}
								break;
						}
						break;
					case 'student_work_uploaded':
						switch($message_text) {
							case '–ó–∞–∫–æ–Ω—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É':
								$mysql->setStatus($id, 'student_work', $status_info);
								$tg->sendMessage($chat_id, '–†–µ—à–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ!');

								sendWork($mysql, $id, $mysql->getWorkById($status_info), $tg, $chat_id);
								break;
							default:
								/////////////////////////////////////////////////////////////////////////////////
								////////////////////////////// SQL INJECTION ////////////////////////////////////
								/////////////////////////////////////////////////////////////////////////////////
								$mysql->addDelivery($id, $status_info, $message_file, $message_text);
								$tg->sendMessage($chat_id, '–ó–∞–ø–∏—Å–∞–Ω–æ! –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ?', $message_id);
								break;
						}
						break;
				}
			}
		}
	}
}

function exiting($conn) {
	mysqli_close($conn);
	exit('ok');
}
exiting($conn);
